image: registry.gitlab.com/attu/cxx

stages:
- build
- sanitize
- benchmark
- post

.template: &build
  script:
  - ./waf configure --prefix=usr build install --destdir=/

gcc:debug:
  stage: build
  <<: *build
  before_script:
  - source config debug
  - export CXX=g++

gcc:release:
  stage: build
  <<: *build
  before_script:
  - source config release
  - export CXX=g++

clang:libstdc++:debug:
  stage: build
  <<: *build
  before_script:
  - source config debug
  - export CXX=clang++

clang:libstdc++:release:
  stage: build
  <<: *build
  before_script:
  - source config release
  - export CXX=clang++

clang:libcxx:debug:
  stage: build
  <<: *build
  before_script:
  - source config debug libc++
  - export CXX=clang++

clang:libcxx:release:
  stage: build
  <<: *build
  before_script:
  - source config release libc++
  - export CXX=clang++

gcc:sanitize:
  stage: sanitize
  <<: *build
  before_script:
  - source config release sanitize
  - export CXX=g++

clang:libstdc++:sanitize:
  stage: sanitize
  <<: *build
  before_script:
  - source config release sanitize
  - export CXX=clang++

clang:libcxx:sanitize:
  stage: sanitize
  <<: *build
  before_script:
  - source config release libc++ sanitize
  - export CXX=clang++

gcc:benchmark:
  stage: benchmark
  before_script:
  - source config release
  - export CXX=g++
  script: ./waf benchmark

clang:libstdc++:benchmark:
  stage: benchmark
  before_script:
  - source config release
  - export CXX=clang++
  script: ./waf benchmark

gcc:coverage:
  stage: post
  <<: *build
  before_script:
  - source config debug coverage
  - export CXX=g++
  after_script:
  - >-
     gcovr
     --root=build
     --filter='.*cxx.*'
     --filter='.*src.*'
     --fail-under-line=100
  - >-
     gcovr
     --branch
     --root=build
     --filter='.*cxx.*'
     --filter='.*src.*'
     --print-summary

clang:fuzzer:
  stage: post
  before_script:
  - source config release sanitize
  - export CXX=clang++
  script: ./waf configure fuzzer
